{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const patientApi = {\n  getAll: async () => {\n    const response = await api.get('/api/patients');\n    return response.data;\n  },\n  getById: async id => {\n    const response = await api.get(`/api/patients/${id}`);\n    return response.data;\n  },\n  create: async patient => {\n    const response = await api.post('/api/patients', patient);\n    return response.data;\n  }\n};\nexport const vitalsApi = {\n  getByPatientId: async (patientId, limit = 100) => {\n    const response = await api.get(`/api/patients/${patientId}/vitals?limit=${limit}`);\n    return response.data;\n  },\n  getLatest: async () => {\n    const response = await api.get('/api/vitals/latest');\n    return response.data;\n  }\n};\nexport const treatmentApi = {\n  create: async treatment => {\n    const response = await api.post('/api/treatments', treatment);\n    return response.data;\n  },\n  getByPatientId: async patientId => {\n    const response = await api.get(`/api/patients/${patientId}/treatments`);\n    return response.data;\n  }\n};\nexport const dispatchApi = {\n  create: async dispatch => {\n    const response = await api.post('/api/dispatches', dispatch);\n    return response.data;\n  },\n  getAll: async () => {\n    const response = await api.get('/api/dispatches');\n    return response.data;\n  }\n};\nexport const systemApi = {\n  getStatus: async () => {\n    const response = await api.get('/api/status');\n    return response.data;\n  },\n  healthCheck: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","patientApi","getAll","response","get","data","getById","id","patient","post","vitalsApi","getByPatientId","patientId","limit","getLatest","treatmentApi","treatment","dispatchApi","dispatch","systemApi","getStatus","healthCheck"],"sources":["/Users/andreschnydercastellobranco/code/kpum-demo/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Patient, Vitals, Treatment, Dispatch, SystemStatus } from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const patientApi = {\n  getAll: async (): Promise<Patient[]> => {\n    const response = await api.get('/api/patients');\n    return response.data;\n  },\n\n  getById: async (id: number): Promise<Patient> => {\n    const response = await api.get(`/api/patients/${id}`);\n    return response.data;\n  },\n\n  create: async (patient: Partial<Patient>): Promise<Patient> => {\n    const response = await api.post('/api/patients', patient);\n    return response.data;\n  },\n};\n\nexport const vitalsApi = {\n  getByPatientId: async (patientId: number, limit: number = 100): Promise<Vitals[]> => {\n    const response = await api.get(`/api/patients/${patientId}/vitals?limit=${limit}`);\n    return response.data;\n  },\n\n  getLatest: async (): Promise<Record<number, Vitals>> => {\n    const response = await api.get('/api/vitals/latest');\n    return response.data;\n  },\n};\n\nexport const treatmentApi = {\n  create: async (treatment: Partial<Treatment>): Promise<Treatment> => {\n    const response = await api.post('/api/treatments', treatment);\n    return response.data;\n  },\n\n  getByPatientId: async (patientId: number): Promise<Treatment[]> => {\n    const response = await api.get(`/api/patients/${patientId}/treatments`);\n    return response.data;\n  },\n};\n\nexport const dispatchApi = {\n  create: async (dispatch: Partial<Dispatch>): Promise<Dispatch> => {\n    const response = await api.post('/api/dispatches', dispatch);\n    return response.data;\n  },\n\n  getAll: async (): Promise<Dispatch[]> => {\n    const response = await api.get('/api/dispatches');\n    return response.data;\n  },\n};\n\nexport const systemApi = {\n  getStatus: async (): Promise<SystemStatus> => {\n    const response = await api.get('/api/status');\n    return response.data;\n  },\n\n  healthCheck: async (): Promise<{ status: string; timestamp: string }> => {\n    const response = await api.get('/health');\n    return response.data;\n  },\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAG;EACxBC,MAAM,EAAE,MAAAA,CAAA,KAAgC;IACtC,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,eAAe,CAAC;IAC/C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,OAAO,EAAE,MAAOC,EAAU,IAAuB;IAC/C,MAAMJ,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,iBAAiBG,EAAE,EAAE,CAAC;IACrD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDP,MAAM,EAAE,MAAOU,OAAyB,IAAuB;IAC7D,MAAML,QAAQ,GAAG,MAAMN,GAAG,CAACY,IAAI,CAAC,eAAe,EAAED,OAAO,CAAC;IACzD,OAAOL,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,OAAO,MAAMK,SAAS,GAAG;EACvBC,cAAc,EAAE,MAAAA,CAAOC,SAAiB,EAAEC,KAAa,GAAG,GAAG,KAAwB;IACnF,MAAMV,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,iBAAiBQ,SAAS,iBAAiBC,KAAK,EAAE,CAAC;IAClF,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDS,SAAS,EAAE,MAAAA,CAAA,KAA6C;IACtD,MAAMX,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,oBAAoB,CAAC;IACpD,OAAOD,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,OAAO,MAAMU,YAAY,GAAG;EAC1BjB,MAAM,EAAE,MAAOkB,SAA6B,IAAyB;IACnE,MAAMb,QAAQ,GAAG,MAAMN,GAAG,CAACY,IAAI,CAAC,iBAAiB,EAAEO,SAAS,CAAC;IAC7D,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDM,cAAc,EAAE,MAAOC,SAAiB,IAA2B;IACjE,MAAMT,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,iBAAiBQ,SAAS,aAAa,CAAC;IACvE,OAAOT,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,OAAO,MAAMY,WAAW,GAAG;EACzBnB,MAAM,EAAE,MAAOoB,QAA2B,IAAwB;IAChE,MAAMf,QAAQ,GAAG,MAAMN,GAAG,CAACY,IAAI,CAAC,iBAAiB,EAAES,QAAQ,CAAC;IAC5D,OAAOf,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDH,MAAM,EAAE,MAAAA,CAAA,KAAiC;IACvC,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,iBAAiB,CAAC;IACjD,OAAOD,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,OAAO,MAAMc,SAAS,GAAG;EACvBC,SAAS,EAAE,MAAAA,CAAA,KAAmC;IAC5C,MAAMjB,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,aAAa,CAAC;IAC7C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDgB,WAAW,EAAE,MAAAA,CAAA,KAA4D;IACvE,MAAMlB,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOD,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}