{"ast":null,"code":"var _jsxFileName = \"/Users/andreschnydercastellobranco/code/kpum-demo/frontend/src/components/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Wifi, WifiOff, Activity } from 'lucide-react';\nimport { patientApi, systemApi, vitalsApi } from '../services/api';\nimport WebSocketService from '../services/websocket';\nimport PatientCard from './PatientCard';\nimport ConnectionStatusIndicator from './ConnectionStatusIndicator';\nimport SystemStatusBar from './SystemStatusBar';\nimport OngoingTreatmentPage from './OngoingTreatmentPage';\nimport OngoingDispatchPage from './OngoingDispatchPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [patientVitals, setPatientVitals] = useState({});\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [systemStatus, setSystemStatus] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [wsService] = useState(() => new WebSocketService());\n  const [currentPage, setCurrentPage] = useState('dashboard');\n  const [ongoingTreatment, setOngoingTreatment] = useState(null);\n  const [ongoingDispatch, setOngoingDispatch] = useState(null);\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        const [patientsData, systemData, vitalsData] = await Promise.all([patientApi.getAll(), systemApi.getStatus(), vitalsApi.getLatest()]);\n        setPatients(patientsData);\n        setSystemStatus(systemData);\n\n        // Transform vitals data to match PatientVitals format\n        const transformedVitals = {};\n        patientsData.forEach(patient => {\n          const vitals = vitalsData[patient.id];\n          if (vitals) {\n            transformedVitals[patient.id] = {\n              patient_id: patient.id,\n              patient_name: patient.name,\n              room_id: patient.room_id,\n              vitals: {\n                heart_rate: vitals.heart_rate,\n                systolic_bp: vitals.systolic_bp,\n                diastolic_bp: vitals.diastolic_bp,\n                respiratory_rate: vitals.respiratory_rate,\n                oxygen_saturation: vitals.oxygen_saturation,\n                temperature: vitals.temperature,\n                ekg_data: vitals.ekg_data\n              },\n              status: vitals.status,\n              reason: vitals.classification_reason,\n              recommended_action: vitals.recommended_action\n            };\n          }\n        });\n        setPatientVitals(transformedVitals);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error loading initial data:', error);\n        setLoading(false);\n      }\n    };\n    loadInitialData();\n  }, []);\n\n  // WebSocket connection and event handling\n  useEffect(() => {\n    const connectWebSocket = async () => {\n      try {\n        await wsService.connect();\n        setConnectionStatus('connected');\n      } catch (error) {\n        console.error('Failed to connect to WebSocket:', error);\n        setConnectionStatus('disconnected');\n      }\n    };\n\n    // Set up event listeners\n    const handleVitalsUpdate = data => {\n      // Transform WebSocket vitals data to match PatientVitals format\n      const transformedData = {};\n      Object.keys(data).forEach(patientIdStr => {\n        const patientId = parseInt(patientIdStr);\n        const vitals = data[patientId];\n        const patient = patients.find(p => p.id === patientId);\n        if (patient && vitals) {\n          transformedData[patientId] = {\n            patient_id: patient.id,\n            patient_name: patient.name,\n            room_id: patient.room_id,\n            vitals: {\n              heart_rate: vitals.vitals.heart_rate,\n              systolic_bp: vitals.vitals.systolic_bp,\n              diastolic_bp: vitals.vitals.diastolic_bp,\n              respiratory_rate: vitals.vitals.respiratory_rate,\n              oxygen_saturation: vitals.vitals.oxygen_saturation,\n              temperature: vitals.vitals.temperature,\n              ekg_data: vitals.vitals.ekg_data\n            },\n            status: vitals.status,\n            reason: vitals.classification_reason,\n            recommended_action: vitals.recommended_action\n          };\n        }\n      });\n      setPatientVitals(prev => ({\n        ...prev,\n        ...transformedData\n      }));\n    };\n    const handleStatusChange = data => {\n      setPatientVitals(prev => ({\n        ...prev,\n        [data.patient_id]: {\n          ...prev[data.patient_id],\n          status: data.status,\n          reason: data.reason\n        }\n      }));\n    };\n    const handleConnectionChange = data => {\n      setConnectionStatus(data.status);\n    };\n\n    // Register event listeners\n    wsService.on('vitals_update', handleVitalsUpdate);\n    wsService.on('status_change', handleStatusChange);\n    wsService.on('connection', handleConnectionChange);\n\n    // Connect to WebSocket\n    connectWebSocket();\n\n    // Debug: Log connection status\n    console.log('WebSocket connection setup complete');\n\n    // Cleanup\n    return () => {\n      wsService.off('vitals_update', handleVitalsUpdate);\n      wsService.off('status_change', handleStatusChange);\n      wsService.off('connection', handleConnectionChange);\n      wsService.disconnect();\n    };\n  }, [wsService, patients]);\n\n  // Update system status periodically\n  useEffect(() => {\n    const updateSystemStatus = async () => {\n      try {\n        const status = await systemApi.getStatus();\n        setSystemStatus(status);\n      } catch (error) {\n        console.error('Error updating system status:', error);\n      }\n    };\n    const interval = setInterval(updateSystemStatus, 5000); // Update every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n  const getStatusCounts = useCallback(() => {\n    const counts = {\n      normal: 0,\n      watch: 0,\n      critical: 0\n    };\n    Object.values(patientVitals).forEach(patient => {\n      counts[patient.status]++;\n    });\n    return counts;\n  }, [patientVitals]);\n  const handleNavigateToOngoingTreatment = treatment => {\n    const patient = patients.find(p => p.id === treatment.patient_id);\n    if (patient) {\n      setOngoingTreatment({\n        patient,\n        treatment\n      });\n      setCurrentPage('ongoing-treatment');\n    }\n  };\n  const handleNavigateToOngoingDispatch = dispatch => {\n    const patient = patients.find(p => p.id === dispatch.patient_id);\n    if (patient) {\n      setOngoingDispatch({\n        patient,\n        dispatch\n      });\n      setCurrentPage('ongoing-dispatch');\n    }\n  };\n  const handleBackToDashboard = () => {\n    setCurrentPage('dashboard');\n    setOngoingTreatment(null);\n    setOngoingDispatch(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-hospital-blue mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Loading hospital monitoring system...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n  const statusCounts = getStatusCounts();\n\n  // Render ongoing treatment page\n  if (currentPage === 'ongoing-treatment' && ongoingTreatment) {\n    return /*#__PURE__*/_jsxDEV(OngoingTreatmentPage, {\n      patient: ongoingTreatment.patient,\n      treatment: ongoingTreatment.treatment,\n      onBack: handleBackToDashboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render ongoing dispatch page\n  if (currentPage === 'ongoing-dispatch' && ongoingDispatch) {\n    return /*#__PURE__*/_jsxDEV(OngoingDispatchPage, {\n      patient: ongoingDispatch.patient,\n      dispatch: ongoingDispatch.dispatch,\n      onBack: handleBackToDashboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render main dashboard\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(ConnectionStatusIndicator, {\n      status: connectionStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-3xl font-bold text-white\",\n              children: \"KPUM Hospital Monitoring\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-blue-100 mt-1\",\n              children: \"Real-time patient vital signs monitoring\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-4 text-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-3 h-3 bg-green-400 rounded-full\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm font-medium\",\n                  children: [\"Normal: \", statusCounts.normal]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-3 h-3 bg-yellow-400 rounded-full\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm font-medium\",\n                  children: [\"Watch: \", statusCounts.watch]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-3 h-3 bg-red-400 rounded-full\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm font-medium\",\n                  children: [\"Critical: \", statusCounts.critical]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2 text-white\",\n              children: [connectionStatus === 'connected' ? /*#__PURE__*/_jsxDEV(Wifi, {\n                className: \"w-5 h-5 text-green-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(WifiOff, {\n                className: \"w-5 h-5 text-red-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-medium\",\n                children: connectionStatus === 'connected' ? 'Live' : 'Offline'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), systemStatus && /*#__PURE__*/_jsxDEV(SystemStatusBar, {\n      status: systemStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5 gap-6\",\n        children: patients.map(patient => /*#__PURE__*/_jsxDEV(PatientCard, {\n          patient: patient,\n          vitals: patientVitals[patient.id],\n          connectionStatus: connectionStatus\n        }, patient.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border-t border-gray-200 py-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between text-sm text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Total Patients: \", patients.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Active Connections: \", (systemStatus === null || systemStatus === void 0 ? void 0 : systemStatus.active_connections) || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(Activity, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Last Update: \", systemStatus !== null && systemStatus !== void 0 && systemStatus.last_update ? new Date(systemStatus.last_update).toLocaleTimeString() : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"8yhSdmz4aAv7M9a7YkXbDr4KhUs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Wifi","WifiOff","Activity","patientApi","systemApi","vitalsApi","WebSocketService","PatientCard","ConnectionStatusIndicator","SystemStatusBar","OngoingTreatmentPage","OngoingDispatchPage","jsxDEV","_jsxDEV","Dashboard","_s","patients","setPatients","patientVitals","setPatientVitals","connectionStatus","setConnectionStatus","systemStatus","setSystemStatus","loading","setLoading","wsService","currentPage","setCurrentPage","ongoingTreatment","setOngoingTreatment","ongoingDispatch","setOngoingDispatch","loadInitialData","patientsData","systemData","vitalsData","Promise","all","getAll","getStatus","getLatest","transformedVitals","forEach","patient","vitals","id","patient_id","patient_name","name","room_id","heart_rate","systolic_bp","diastolic_bp","respiratory_rate","oxygen_saturation","temperature","ekg_data","status","reason","classification_reason","recommended_action","error","console","connectWebSocket","connect","handleVitalsUpdate","data","transformedData","Object","keys","patientIdStr","patientId","parseInt","find","p","prev","handleStatusChange","handleConnectionChange","on","log","off","disconnect","updateSystemStatus","interval","setInterval","clearInterval","getStatusCounts","counts","normal","watch","critical","values","handleNavigateToOngoingTreatment","treatment","handleNavigateToOngoingDispatch","dispatch","handleBackToDashboard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","statusCounts","onBack","map","length","active_connections","last_update","Date","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/andreschnydercastellobranco/code/kpum-demo/frontend/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Wifi, WifiOff, Activity } from 'lucide-react';\nimport { Patient, PatientVitals, ConnectionStatus, Treatment, Dispatch } from '../types';\nimport { patientApi, systemApi, vitalsApi } from '../services/api';\nimport WebSocketService from '../services/websocket';\nimport PatientCard from './PatientCard';\nimport ConnectionStatusIndicator from './ConnectionStatusIndicator';\nimport SystemStatusBar from './SystemStatusBar';\nimport OngoingTreatmentPage from './OngoingTreatmentPage';\nimport OngoingDispatchPage from './OngoingDispatchPage';\n\nconst Dashboard: React.FC = () => {\n  const [patients, setPatients] = useState<Patient[]>([]);\n  const [patientVitals, setPatientVitals] = useState<Record<number, PatientVitals>>({});\n  const [connectionStatus, setConnectionStatus] = useState<ConnectionStatus>('disconnected');\n  const [systemStatus, setSystemStatus] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [wsService] = useState(() => new WebSocketService());\n  const [currentPage, setCurrentPage] = useState<'dashboard' | 'ongoing-treatment' | 'ongoing-dispatch'>('dashboard');\n  const [ongoingTreatment, setOngoingTreatment] = useState<{ patient: Patient; treatment: Treatment } | null>(null);\n  const [ongoingDispatch, setOngoingDispatch] = useState<{ patient: Patient; dispatch: Dispatch } | null>(null);\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        const [patientsData, systemData, vitalsData] = await Promise.all([\n          patientApi.getAll(),\n          systemApi.getStatus(),\n          vitalsApi.getLatest(),\n        ]);\n        \n        setPatients(patientsData);\n        setSystemStatus(systemData);\n        \n        // Transform vitals data to match PatientVitals format\n        const transformedVitals: Record<number, PatientVitals> = {};\n        patientsData.forEach(patient => {\n          const vitals = vitalsData[patient.id];\n          if (vitals) {\n            transformedVitals[patient.id] = {\n              patient_id: patient.id,\n              patient_name: patient.name,\n              room_id: patient.room_id,\n              vitals: {\n                heart_rate: vitals.heart_rate,\n                systolic_bp: vitals.systolic_bp,\n                diastolic_bp: vitals.diastolic_bp,\n                respiratory_rate: vitals.respiratory_rate,\n                oxygen_saturation: vitals.oxygen_saturation,\n                temperature: vitals.temperature,\n                ekg_data: vitals.ekg_data,\n              },\n              status: vitals.status,\n              reason: vitals.classification_reason,\n              recommended_action: vitals.recommended_action,\n            };\n          }\n        });\n        \n        setPatientVitals(transformedVitals);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error loading initial data:', error);\n        setLoading(false);\n      }\n    };\n\n    loadInitialData();\n  }, []);\n\n  // WebSocket connection and event handling\n  useEffect(() => {\n    const connectWebSocket = async () => {\n      try {\n        await wsService.connect();\n        setConnectionStatus('connected');\n      } catch (error) {\n        console.error('Failed to connect to WebSocket:', error);\n        setConnectionStatus('disconnected');\n      }\n    };\n\n    // Set up event listeners\n    const handleVitalsUpdate = (data: Record<number, any>) => {\n      // Transform WebSocket vitals data to match PatientVitals format\n      const transformedData: Record<number, PatientVitals> = {};\n      Object.keys(data).forEach(patientIdStr => {\n        const patientId = parseInt(patientIdStr);\n        const vitals = data[patientId];\n        const patient = patients.find(p => p.id === patientId);\n        \n        if (patient && vitals) {\n          transformedData[patientId] = {\n            patient_id: patient.id,\n            patient_name: patient.name,\n            room_id: patient.room_id,\n            vitals: {\n              heart_rate: vitals.vitals.heart_rate,\n              systolic_bp: vitals.vitals.systolic_bp,\n              diastolic_bp: vitals.vitals.diastolic_bp,\n              respiratory_rate: vitals.vitals.respiratory_rate,\n              oxygen_saturation: vitals.vitals.oxygen_saturation,\n              temperature: vitals.vitals.temperature,\n              ekg_data: vitals.vitals.ekg_data,\n            },\n            status: vitals.status,\n            reason: vitals.classification_reason,\n            recommended_action: vitals.recommended_action,\n          };\n        }\n      });\n      \n      setPatientVitals(prev => ({ ...prev, ...transformedData }));\n    };\n\n    const handleStatusChange = (data: { patient_id: number; status: string; reason?: string }) => {\n      setPatientVitals(prev => ({\n        ...prev,\n        [data.patient_id]: {\n          ...prev[data.patient_id],\n          status: data.status as 'normal' | 'watch' | 'critical',\n          reason: data.reason,\n        }\n      }));\n    };\n\n    const handleConnectionChange = (data: { status: ConnectionStatus }) => {\n      setConnectionStatus(data.status);\n    };\n\n    // Register event listeners\n    wsService.on('vitals_update', handleVitalsUpdate);\n    wsService.on('status_change', handleStatusChange);\n    wsService.on('connection', handleConnectionChange);\n\n    // Connect to WebSocket\n    connectWebSocket();\n    \n    // Debug: Log connection status\n    console.log('WebSocket connection setup complete');\n\n    // Cleanup\n    return () => {\n      wsService.off('vitals_update', handleVitalsUpdate);\n      wsService.off('status_change', handleStatusChange);\n      wsService.off('connection', handleConnectionChange);\n      wsService.disconnect();\n    };\n  }, [wsService, patients]);\n\n  // Update system status periodically\n  useEffect(() => {\n    const updateSystemStatus = async () => {\n      try {\n        const status = await systemApi.getStatus();\n        setSystemStatus(status);\n      } catch (error) {\n        console.error('Error updating system status:', error);\n      }\n    };\n\n    const interval = setInterval(updateSystemStatus, 5000); // Update every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  const getStatusCounts = useCallback(() => {\n    const counts = { normal: 0, watch: 0, critical: 0 };\n    \n    Object.values(patientVitals).forEach(patient => {\n      counts[patient.status]++;\n    });\n    \n    return counts;\n  }, [patientVitals]);\n\n  const handleNavigateToOngoingTreatment = (treatment: Treatment) => {\n    const patient = patients.find(p => p.id === treatment.patient_id);\n    if (patient) {\n      setOngoingTreatment({ patient, treatment });\n      setCurrentPage('ongoing-treatment');\n    }\n  };\n\n  const handleNavigateToOngoingDispatch = (dispatch: Dispatch) => {\n    const patient = patients.find(p => p.id === dispatch.patient_id);\n    if (patient) {\n      setOngoingDispatch({ patient, dispatch });\n      setCurrentPage('ongoing-dispatch');\n    }\n  };\n\n  const handleBackToDashboard = () => {\n    setCurrentPage('dashboard');\n    setOngoingTreatment(null);\n    setOngoingDispatch(null);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-hospital-blue mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading hospital monitoring system...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const statusCounts = getStatusCounts();\n\n  // Render ongoing treatment page\n  if (currentPage === 'ongoing-treatment' && ongoingTreatment) {\n    return (\n      <OngoingTreatmentPage\n        patient={ongoingTreatment.patient}\n        treatment={ongoingTreatment.treatment}\n        onBack={handleBackToDashboard}\n      />\n    );\n  }\n\n  // Render ongoing dispatch page\n  if (currentPage === 'ongoing-dispatch' && ongoingDispatch) {\n    return (\n      <OngoingDispatchPage\n        patient={ongoingDispatch.patient}\n        dispatch={ongoingDispatch.dispatch}\n        onBack={handleBackToDashboard}\n      />\n    );\n  }\n\n  // Render main dashboard\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Connection Status */}\n      <ConnectionStatusIndicator status={connectionStatus} />\n      \n      {/* Header */}\n      <div className=\"dashboard-header shadow-lg\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-white\">\n                KPUM Hospital Monitoring\n              </h1>\n              <p className=\"text-blue-100 mt-1\">\n                Real-time patient vital signs monitoring\n              </p>\n            </div>\n            \n            <div className=\"flex items-center space-x-6\">\n              <div className=\"flex items-center space-x-4 text-white\">\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-3 h-3 bg-green-400 rounded-full\"></div>\n                  <span className=\"text-sm font-medium\">Normal: {statusCounts.normal}</span>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-3 h-3 bg-yellow-400 rounded-full\"></div>\n                  <span className=\"text-sm font-medium\">Watch: {statusCounts.watch}</span>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-3 h-3 bg-red-400 rounded-full\"></div>\n                  <span className=\"text-sm font-medium\">Critical: {statusCounts.critical}</span>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center space-x-2 text-white\">\n                {connectionStatus === 'connected' ? (\n                  <Wifi className=\"w-5 h-5 text-green-300\" />\n                ) : (\n                  <WifiOff className=\"w-5 h-5 text-red-300\" />\n                )}\n                <span className=\"text-sm font-medium\">\n                  {connectionStatus === 'connected' ? 'Live' : 'Offline'}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* System Status Bar */}\n      {systemStatus && (\n        <SystemStatusBar status={systemStatus} />\n      )}\n\n      {/* Patient Grid */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5 gap-6\">\n          {patients.map(patient => (\n            <PatientCard\n              key={patient.id}\n              patient={patient}\n              vitals={patientVitals[patient.id]}\n              connectionStatus={connectionStatus}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div className=\"bg-white border-t border-gray-200 py-4\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between text-sm text-gray-500\">\n            <div className=\"flex items-center space-x-4\">\n              <span>Total Patients: {patients.length}</span>\n              <span>Active Connections: {systemStatus?.active_connections || 0}</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Activity className=\"w-4 h-4\" />\n              <span>Last Update: {systemStatus?.last_update ? new Date(systemStatus.last_update).toLocaleTimeString() : 'N/A'}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}